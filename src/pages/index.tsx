import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { Smoothie } from "~/components/Smoothie";
import { useDebounce } from "~/utils/helpers";
import { api } from "~/utils/api";

const Home: NextPage = () => {
  const [filter, setFilter] = useState("");
  const debouncedFilterValue = useDebounce(filter, 300);
  const {
    data: smoothiesFiltered,
    isLoading: isLoadingFiltered,
    isError: isErrorFiltered,
    refetch: refetchSmoothiesFiltered,
  } = api.smoothies.getAllFiltered.useQuery(debouncedFilterValue);

  return (
    <>
      <Head>
        <title>Create Smoothie App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="w-full pt-32 text-center">
        <input
          onChange={(e) => {
            setFilter(e.target.value);
          }}
          placeholder="Search Smoothie"
          className="input font-bold"
        />
      </div>

      {/* {isLoadingFiltered && <p>Loading Smoothies...</p>}
      {isErrorFiltered && <p>Error loading Smoothies... </p>} */}
      <div className=" flex flex-wrap items-center justify-center gap-5 pt-28">
        {smoothiesFiltered ? (
          smoothiesFiltered.map((smoothie) => (
            <Smoothie
              onRefetch={refetchSmoothiesFiltered as () => void}
              key={smoothie.id}
              {...smoothie}
            />
          ))
        ) : (
          <div>no filtered smoothies found</div>
        )}
      </div>
    </>
  );
};

export default Home;
