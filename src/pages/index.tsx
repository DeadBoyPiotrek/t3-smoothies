import { type NextPage } from "next";
import Head from "next/head";
import { Smoothie } from "~/components/Smoothie";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const helloSupa = api.example.supGreeting.useQuery().data?.items[0]?.text;
  const {
    data: smoothies,
    isLoading,
    isError,
    refetch: refetchSmoothies,
  } = api.smoothies.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col items-center justify-center py-20 text-white">
        <h1 className="text-5xl">{hello?.data && hello.data.greeting}</h1>
        <h2 className="mt-5 text-2xl">{helloSupa}</h2>
      </div>
      {isLoading && <p>Loading Smoothies...</p>}
      {isError && <p>Error loading Smoothies... </p>}
      <div className="flex flex-wrap items-center justify-center gap-5">
        {smoothies ? (
          smoothies.map((smoothie) => (
            <Smoothie
              onRefetch={refetchSmoothies as () => void}
              key={smoothie.id}
              {...smoothie}
            />
          ))
        ) : (
          <div>no smoothies found</div>
        )}
      </div>
    </>
  );
};

export default Home;
